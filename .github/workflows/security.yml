name: Security Pipeline

# Triggers for the pipeline
on:
  push:
    branches: [main, security-pipeline]
  pull_request:
    branches: [main, security-pipeline]
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight UTC

jobs:
  code-quality:
    name: Code Quality and Coverage
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        language: [python]

    steps:
    # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

    # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

    # Step 3: Installing dependancies
      - name: Install dependencies
        run: |
          pip install pylint pytest pytest-cov

    # Step 3: Run the Pylint 
      - name: Run Pylint
        run: |
          pylint sample-project/ --exit-zero --output-format=colorized

    # Step 3: Run the unit test with coverage
      - name: Run Unit Tests with Coverage
        run: |
          pytest --cov=sample-project --cov-report=term --cov-report=xml
    
    # Step 3: Upload the coverage report
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml